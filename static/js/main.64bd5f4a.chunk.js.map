{"version":3,"sources":["components/Progress/index.js","MusicPlayer.js","examples/playlist.js","examples/BasicPlayer/index.js","examples/VerticalPlayer/index.js","index.js","examples/ExampleComponent.js"],"names":["Progress","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","_ref","clientX","props","progressRef","progressContainer","current","getBoundingClientRect","left","clientWidth","onKeyDown","_ref2","keyCode","_this$props","percent","Math","max","min","React","createRef","_this$props2","strokeColor","strokeWidth","react_default","a","createElement","ref","role","tabIndex","className","style","height","concat","width","backgroundColor","Component","defaultProps","MusicPlayer","updateProgress","_this$audioContainer$","audioContainer","duration","currentTime","progress","setState","leftTime","end","handleNext","handleAdjustProgress","value","play","handleAdjustVolume","volume","handleToggle","state","pause","handlePrev","playlist","_this$state","playMode","activeMusicIndex","playMusic","total","length","index","randomIndex","floor","random","_this$state2","handleChangePlayMode","modeList","indexOf","autoplay","addEventListener","removeEventListener","mode","progressColor","btnColor","_this$state3","activeMusic","playModeClass","getPlayModeClass","btnStyle","color","classNames","vertical","objectSpread","autoPlay","preload","src","url","kind","title","artist","join","time","isNaN","mins","secs","toFixed","formatTime","Progress_Progress","type","backgroundImage","cover","examples_playlist","BasicPlayer","marginBottom","MusicPlayer_MusicPlayer","VerticalPlayer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64bd5f4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nexport default class Progress extends Component {\n  static propTypes = {\n    percent: PropTypes.number,\n    strokeColor: PropTypes.string,\n    strokeWidth: PropTypes.number\n  };\n\n  static defaultProps = {\n    percent: 0,\n    strokeColor: '#9b9b9b',\n    strokeWidth: 2\n  };\n\n  constructor() {\n    super();\n    this.progressContainer = React.createRef();\n  }\n\n  onClick = ({ clientX }) => {\n    const { onClick } = this.props;\n    const progressRef = this.progressContainer.current;\n    const progress = (clientX - progressRef.getBoundingClientRect().left) / progressRef.clientWidth;\n    onClick(progress);\n  };\n\n  onKeyDown = ({ keyCode }) => {\n    const { percent, onClick } = this.props;\n    switch (keyCode) {\n      case 37:\n      case 40:\n        onClick(Math.max(percent - 0.05, 0));\n        break;\n      case 38:\n      case 39:\n        onClick(Math.min(percent + 0.05, 0.9999));\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { percent, strokeColor, strokeWidth } = this.props;\n    return (\n      <div\n        ref={this.progressContainer}\n        role=\"progressbar\"\n        tabIndex=\"-1\"\n        className=\"progress\"\n        style={{ height: `${strokeWidth}px` }}\n        onClick={this.onClick}\n        onKeyDown={this.onKeyDown}\n      >\n        <div className=\"progress-inner\" style={{ width: `${percent * 100}%`, backgroundColor: strokeColor }} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Progress from './components/Progress';\nimport './MusicPlayer.scss';\n\nconst formatTime = time => {\n  /* eslint no-restricted-globals: off */\n  if (isNaN(time) || time === 0) {\n    return '';\n  }\n  const mins = Math.floor(time / 60);\n  const secs = (time % 60).toFixed();\n  return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n};\n\nconst processArtistName = artistList => artistList.join(' / ');\n\nconst getPlayModeClass = playMode => {\n  if (playMode === 'loop') return 'refresh';\n  if (playMode === 'random') return 'random';\n  return 'repeat';\n};\n\nexport default class MusicPlayer extends Component {\n  static propTypes = {\n    playlist: PropTypes.arrayOf(\n      PropTypes.shape({\n        url: PropTypes.string,\n        cover: PropTypes.string,\n        title: PropTypes.string,\n        artist: PropTypes.arrayOf(PropTypes.string)\n      })\n    ).isRequired,\n    mode: PropTypes.oneOf(['horizontal', 'vertical']),\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    autoplay: PropTypes.bool,\n    progressColor: PropTypes.string,\n    btnColor: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    mode: 'horizontal',\n    width: '100%',\n    autoplay: false,\n    progressColor: '#66cccc',\n    btnColor: '#4a4a4a',\n    style: {}\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMusicIndex: 0,\n      leftTime: 0,\n      play: props.autoplay || false,\n      playMode: 'loop',\n      progress: 0,\n      volume: 1\n    };\n    this.modeList = ['loop', 'random', 'repeat'];\n    this.audioContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    this.audioContainer.current.addEventListener('timeupdate', this.updateProgress);\n    this.audioContainer.current.addEventListener('ended', this.end);\n  }\n\n  componentWillUnmount() {\n    this.audioContainer.current.removeEventListener('timeupdate', this.updateProgress);\n    this.audioContainer.current.removeEventListener('ended', this.end);\n  }\n\n  updateProgress = () => {\n    const { duration, currentTime } = this.audioContainer.current;\n    const progress = currentTime / duration || 0;\n    this.setState({ progress, leftTime: duration - currentTime });\n  };\n\n  end = () => {\n    this.handleNext();\n  };\n\n  handleAdjustProgress = value => {\n    const currentTime = this.audioContainer.current.duration * value;\n    this.audioContainer.current.currentTime = currentTime;\n    this.setState({ play: true, progress: value }, () => this.audioContainer.current.play());\n  };\n\n  handleAdjustVolume = value => {\n    const volume = value < 0 ? 0 : value;\n    this.audioContainer.current.volume = volume;\n    this.setState({ volume });\n  };\n\n  handleToggle = () => {\n    const { play } = this.state;\n    if (play) {\n      this.audioContainer.current.pause();\n    } else {\n      this.audioContainer.current.play();\n    }\n    this.setState(({ play }) => ({ play: !play }));\n  };\n\n  handlePrev = () => {\n    const { playlist } = this.props;\n    const { playMode, activeMusicIndex } = this.state;\n    if (playMode === 'repeat') {\n      this.playMusic(activeMusicIndex);\n    } else if (playMode === 'loop') {\n      const total = playlist.length;\n      const index = activeMusicIndex > 0 ? activeMusicIndex - 1 : total - 1;\n      this.playMusic(index);\n    } else if (playMode === 'random') {\n      let randomIndex = Math.floor(Math.random() * playlist.length);\n      while (randomIndex === activeMusicIndex) {\n        randomIndex = Math.floor(Math.random() * playlist.length);\n      }\n      this.playMusic(randomIndex);\n    } else {\n      this.setState({ play: false });\n    }\n  };\n\n  handleNext = () => {\n    const { playlist } = this.props;\n    const { playMode, activeMusicIndex } = this.state;\n    if (playMode === 'repeat') {\n      this.playMusic(activeMusicIndex);\n    } else if (playMode === 'loop') {\n      const total = playlist.length;\n      const index = activeMusicIndex < total - 1 ? activeMusicIndex + 1 : 0;\n      this.playMusic(index);\n    } else if (playMode === 'random') {\n      let randomIndex = Math.floor(Math.random() * playlist.length);\n      while (randomIndex === activeMusicIndex) {\n        randomIndex = Math.floor(Math.random() * playlist.length);\n      }\n      this.playMusic(randomIndex);\n    } else {\n      this.setState({ play: false });\n    }\n  };\n\n  handleChangePlayMode = () => {\n    const { playMode } = this.state;\n    let index = this.modeList.indexOf(playMode);\n    index = (index + 1) % this.modeList.length;\n    this.setState({ playMode: this.modeList[index] });\n  };\n\n  playMusic = index => {\n    this.setState({ activeMusicIndex: index, leftTime: 0, play: true, progress: 0 }, () => {\n      this.audioContainer.current.currentTime = 0;\n      this.audioContainer.current.play();\n    });\n  };\n\n  render() {\n    const { playlist, mode, width, progressColor, btnColor, style } = this.props;\n    const { play, progress, leftTime, volume, activeMusicIndex, playMode } = this.state;\n    const activeMusic = playlist[activeMusicIndex];\n    const playModeClass = getPlayModeClass(playMode);\n    const btnStyle = { color: btnColor };\n\n    return (\n      <div\n        className={classNames('player', { vertical: mode === 'vertical' })}\n        style={{ ...style, width: typeof width === 'string' ? width : `${width}px` }}\n      >\n        <audio autoPlay={play} preload=\"auto\" ref={this.audioContainer} src={activeMusic.url}>\n          <track kind=\"captions\" />\n        </audio>\n        <div className=\"player-control\">\n          <div className=\"music-info\">\n            <h2 className=\"title\">{activeMusic.title}</h2>\n            <h3 className=\"artist\">{processArtistName(activeMusic.artist)}</h3>\n          </div>\n          <div className=\"time-and-volume\">\n            <div className=\"time-remaining\">-{formatTime(leftTime)}</div>\n            <div className=\"volume-control\">\n              <i className=\"volume-icon fa fa-volume-up\" />\n              <div className=\"volume-bar\">\n                <Progress percent={volume} onClick={this.handleAdjustVolume} />\n              </div>\n            </div>\n          </div>\n          <Progress percent={progress} strokeColor={progressColor} onClick={this.handleAdjustProgress} />\n          <div className=\"controls\">\n            <button\n              type=\"button\"\n              className={`fa fa-${playModeClass}`}\n              style={btnStyle}\n              onClick={this.handleChangePlayMode}\n            />\n            <button type=\"button\" className=\"fa fa-step-backward\" style={btnStyle} onClick={this.handlePrev} />\n            <button\n              type=\"button\"\n              className={`fa fa-${play ? 'pause' : 'play'}`}\n              style={btnStyle}\n              onClick={this.handleToggle}\n            />\n            <button type=\"button\" className=\"fa fa-step-forward\" style={btnStyle} onClick={this.handleNext} />\n          </div>\n        </div>\n        <div className=\"player-cover\" style={{ backgroundImage: `url(${activeMusic.cover})` }} />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    url: 'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3',\n    cover: 'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    title: 'Despacito',\n    artist: ['Luis Fonsi', 'Daddy Yankee']\n  },\n  {\n    url: 'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3',\n    cover: 'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n    title: 'Bedtime Stories',\n    artist: ['Jay Chou']\n  },\n  {\n    url: 'http://res.cloudinary.com/alick/video/upload/v1502444212/Actor_ud8ccw.mp3',\n    cover: 'http://res.cloudinary.com/alick/image/upload/v1502444304/actor_umzdur.jpg',\n    title: '演员',\n    artist: ['薛之谦']\n  },\n  {\n    url: 'http://res.cloudinary.com/alick/video/upload/v1502444215/Bridge_of_Fate_aaksg1.mp3',\n    cover: 'http://res.cloudinary.com/alick/image/upload/v1502444306/Bridge_of_Fate_o36rem.jpg',\n    title: 'Bridge of Fate',\n    artist: ['王力宏', '谭维维']\n  },\n  {\n    url: 'http://res.cloudinary.com/alick/video/upload/v1502444222/Goodbye_byaom5.mp3',\n    cover: 'http://res.cloudinary.com/alick/image/upload/v1502444310/Goodbye_hpubmk.jpg',\n    title: 'Goodbye',\n    artist: ['G.E.M.']\n  }\n];\n","import React from 'react';\nimport Player from '../../MusicPlayer';\nimport playlist from '../playlist';\n\nexport default () => (\n  <div style={{ width: '600px', marginBottom: '60px' }}>\n    <Player playlist={playlist} />\n  </div>\n);\n","import React from 'react';\nimport Player from '../../MusicPlayer';\nimport playlist from '../playlist';\n\nexport default () => <Player playlist={playlist} mode=\"vertical\" width={320} />;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ExampleComponent from './examples/ExampleComponent';\n\nReactDOM.render(<ExampleComponent />, document.getElementById('root'));\n","import React from 'react';\nimport BasicPlayer from './BasicPlayer';\nimport VerticalPlayer from './VerticalPlayer';\n\nexport default () => (\n  <div>\n    <BasicPlayer />\n    <VerticalPlayer />\n  </div>\n);\n"],"sourceRoot":""}